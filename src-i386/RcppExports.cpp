// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// impute_with_colmean
NumericMatrix impute_with_colmean(const NumericMatrix X);
RcppExport SEXP _GMMHC_impute_with_colmean(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(impute_with_colmean(X));
    return rcpp_result_gen;
END_RCPP
}
// calculate_paras_with_class
List calculate_paras_with_class(const NumericMatrix X, const NumericVector class0);
RcppExport SEXP _GMMHC_calculate_paras_with_class(SEXP XSEXP, SEXP class0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type class0(class0SEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_paras_with_class(X, class0));
    return rcpp_result_gen;
END_RCPP
}
// myalgorithm
List myalgorithm(const NumericMatrix X, List para_0, const int max_iter, const double epsilon_dif, const double epsilon_var);
RcppExport SEXP _GMMHC_myalgorithm(SEXP XSEXP, SEXP para_0SEXP, SEXP max_iterSEXP, SEXP epsilon_difSEXP, SEXP epsilon_varSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< List >::type para_0(para_0SEXP);
    Rcpp::traits::input_parameter< const int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type epsilon_dif(epsilon_difSEXP);
    Rcpp::traits::input_parameter< const double >::type epsilon_var(epsilon_varSEXP);
    rcpp_result_gen = Rcpp::wrap(myalgorithm(X, para_0, max_iter, epsilon_dif, epsilon_var));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GMMHC_impute_with_colmean", (DL_FUNC) &_GMMHC_impute_with_colmean, 1},
    {"_GMMHC_calculate_paras_with_class", (DL_FUNC) &_GMMHC_calculate_paras_with_class, 2},
    {"_GMMHC_myalgorithm", (DL_FUNC) &_GMMHC_myalgorithm, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_GMMHC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
